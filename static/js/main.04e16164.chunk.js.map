{"version":3,"sources":["Search/Search.module.css","Contacts/Contacts.module.css","Form/Form.js","Contacts/Contact.js","Contacts/Contacts.js","Search/Search.js","App.js","index.js","Form/Form.module.css"],"names":["module","exports","Form","state","name","number","handleInputChange","event","target","value","setState","reset","handleSubmit","props","onSubmit","contactList","contacts","map","contact","toLowerCase","preventDefault","includes","Toastr","this","type","onChange","pattern","title","required","className","s","input","button","Component","Contact","id","onDelete","item","text","onClick","Contacts","list","Search","onSearch","label","App","filter","submitHandler","data","shortid","generate","deleteContact","contactId","handleFilter","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","lowerCasedFilter","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04e16164.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Search_label__3G4eo\",\"input\":\"Search_input__2uCW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3WNVz\",\"text\":\"Contacts_text__3f4av\",\"item\":\"Contacts_item__26ORm\",\"button\":\"Contacts_button__1DiFj\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Toastr from 'toastr';\nimport '../../node_modules/toastr/build/toastr.css';\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  handleSubmit = event => {\n    const { onSubmit, contactList } = this.props;\n    const { name } = this.state;\n    const contacts = contactList.map(contact => contact.name.toLowerCase());\n\n    event.preventDefault();\n    if (contacts.includes(name.toLowerCase())) {\n      Toastr.error(`${name} is already in contacts`);\n      this.reset();\n      return;\n    }\n    onSubmit(this.state);\n    this.reset();\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            {' '}\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleInputChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              className={s.input}\n            />\n          </label>\n          <label>\n            {' '}\n            Number:\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleInputChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              className={s.input}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n  contactList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nfunction Contact({ id, name, number, onDelete }) {\n  return (\n    <li className={s.item}>\n      <p className={s.text}>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={() => onDelete(id)} className={s.button}>\n        X\n      </button>\n    </li>\n  );\n}\n\nexport default Contact;\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\n","import s from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact';\n\nfunction Contacts({ contacts, onDelete }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <Contact\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDelete={onDelete}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Search.module.css';\n\nfunction Search({ value, onSearch }) {\n  return (\n    <label className={s.label}>\n      {' '}\n      Find contacts by name:\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onSearch}\n        className={s.input}\n      ></input>\n    </label>\n  );\n}\n\nexport default Search;\n\nSearch.propTypes = {\n  value: PropTypes.string,\n  onSearch: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Form from './Form/Form';\nimport Contacts from './Contacts/Contacts';\nimport Search from './Search/Search';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n\n    this.setState({\n      contacts,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  submitHandler = data => {\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, { id: shortid.generate(), ...data }],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  handleFilter = event => {\n    this.setState({\n      filter: event.target.value,\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const lowerCasedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerCasedFilter),\n    );\n\n    return (\n      <div className=\"wrapper\">\n        <h1 className=\"main-title\">Phonebook</h1>\n        <Form onSubmit={this.submitHandler} contactList={contacts} />\n        <h2 className=\"title\">Contacts</h2>\n        <Search value={filter} onSearch={this.handleFilter} />\n        <Contacts contacts={filteredContacts} onDelete={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__yntD8\",\"button\":\"Form_button__2geHg\"};"],"sourceRoot":""}